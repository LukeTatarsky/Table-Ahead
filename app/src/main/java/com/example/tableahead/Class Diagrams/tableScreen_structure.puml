@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "com.example.tableahead.tableScreen",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1322970774 { 
   	label=example
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_121138761 { 
   	label=tableahead
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   Table156698436[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Table</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   bookingDate: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   bookingId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   bookingTime: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   note: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   partySize: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   restaurantId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   restaurantName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   section: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tableId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tableNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tableSeats: long [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ describeContents(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeToParcel(dest: Parcel, flags: int)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TableCustomDialog156698436[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TableCustomDialog</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   book_to_days_in_advance: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   calendar: Calendar [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   close_time: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   current_party_size: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   dateChangedFlag: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   dateToPass: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   date_string: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   intervalMinutes: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   listener: DialogListener [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   mainCalendar: Calendar [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   max_party_size: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   openHour: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   open_time: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   text_size: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   time: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   workingCalendar: Calendar [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- generate_times(context: Context, txtTime: TextView, txtDate: TextView, timePickerLayout: LinearLayout)</TD></TR>
<TR><TD ALIGN="LEFT" >+ isDateToday(dateToCheck: Date): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ showDialog(context: Context)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TableLoadFragment156698436[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TableLoadFragment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle): View</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

tableDataRVAdapter156698436[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)tableDataRVAdapter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   clickListener: OnItemClickListener [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   context: Context [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tableList: ArrayList&lt;Table&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ onBindViewHolder(holder: MyViewHolder, position: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onCreateViewHolder(parent: ViewGroup, viewType: int): MyViewHolder</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

tableScreen156698436[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)tableScreen</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   adapter: tableDataRVAdapter [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   bookingCalendar: Calendar [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   bookingDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   bookingTimeButtonFormat: SimpleDateFormat [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   buttonThisLocale: SimpleDateFormat [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   close_time: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   current_party_size: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   dateChangedFlag: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   date_string: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   db: FirebaseFirestore [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   executor: Executor [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   intervalMinutes: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   loadingFragment: TableLoadFragment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   mAuth: FirebaseAuth [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   open_time: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   party_date_time_button: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   recyclerViewTables: RecyclerView [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   restaurantId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   restoName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   tableBookingOverview: Table [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tableListRV: ArrayList&lt;Table&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   textViewRestaurantName: TextView [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   time_string: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   userId: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- book_table(table: Table)</TD></TR>
<TR><TD ALIGN="LEFT" >- check_Hours()</TD></TR>
<TR><TD ALIGN="LEFT" >- completeTableBooking(table: Table)</TD></TR>
<TR><TD ALIGN="LEFT" >- displaySnackBar(message: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- displayToast(message: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- getAvailableTables(restaurantId: String, date: String, time: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- getRestaurantDetails(restId: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- hideLoadingFragment()</TD></TR>
<TR><TD ALIGN="LEFT" >- incrementBookingCounter(table: Table)</TD></TR>
<TR><TD ALIGN="LEFT" ># onCreate(savedInstanceState: Bundle)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onDialogComplete(partySize: String, date: Date, time: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- queryAvailableTables(restaurantTablesRef: CollectionReference, currentPartySize: int, fullyBookedTableIds: List&lt;String&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >- queryBookingsForAvailability(restaurantBookingsRef: CollectionReference, date: String, time: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- showAlertDialog(table: Table)</TD></TR>
<TR><TD ALIGN="LEFT" >+ showCustomDialog(view: View)</TD></TR>
<TR><TD ALIGN="LEFT" >- showLoadingFragment()</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateBooking(table: Table)</TD></TR>
<TR><TD ALIGN="LEFT" >- update_date_time(date: Date)</TD></TR>
<TR><TD ALIGN="LEFT" >- update_date_time()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
TableCustomDialog156698436 -> tableScreen156698436[arrowhead=none];
TableCustomDialog156698436 -> tableScreen156698436[label="listener
[0..1]", arrowhead=none];
tableDataRVAdapter156698436 -> Table156698436[label="tableList
[0..*]"];
tableScreen156698436 -> Table156698436[label="tableBookingOverview
[0..1]"];
tableScreen156698436 -> Table156698436[label="tableListRV
[0..*]"];
tableScreen156698436 -> TableCustomDialog156698436[label="showCustomDialog() -> showDialog()"];
tableScreen156698436 -> TableLoadFragment156698436[label="loadingFragment
[0..1]"];
tableScreen156698436 -> tableDataRVAdapter156698436[label="adapter
[0..1]"];
    
}
@enduml