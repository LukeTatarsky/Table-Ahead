@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "com.example.tableahead.bookings.BookingOverview",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1322970774 { 
   	label=example
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_121138761 { 
   	label=tableahead
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   BookingMenuAdapterRV1980441948[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BookingMenuAdapterRV</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   clickListener: OnItemClickListener [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   context: Context [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   orderList: List&lt;MenuItemModel&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ onBindViewHolder(holder: MenuItemViewHolder, position: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onCreateViewHolder(parent: ViewGroup, viewType: int): MenuItemViewHolder</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BookingOverview1980441948[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BookingOverview</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   adapter: BookingMenuAdapterRV [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   db: FirebaseFirestore [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   editTxtNote: EditText [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   executor: Executor [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   order: ArrayList&lt;MenuItemModel&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   subtotal: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   table: Table [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   txtDate: TextView [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   txtPartySize: TextView [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   txtRestName: TextView [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   txtSeats: TextView [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   txtSection: TextView [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   txtSubtotal: TextView [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   txtTableNum: TextView [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   txtTime: TextView [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- calculateSubtotal(items: ArrayList&lt;MenuItemModel&gt;): float</TD></TR>
<TR><TD ALIGN="LEFT" >- changeOrder(items: ArrayList&lt;MenuItemModel&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >- deleteBooking(table: Table)</TD></TR>
<TR><TD ALIGN="LEFT" >- fillItemsArray(items: ArrayList&lt;MenuItemModel&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >- getOrderFromDatabase()</TD></TR>
<TR><TD ALIGN="LEFT" >- makeNewRecyclerView()</TD></TR>
<TR><TD ALIGN="LEFT" ># onActivityResult(requestCode: int, resultCode: int, intent: Intent)</TD></TR>
<TR><TD ALIGN="LEFT" ># onCreate(savedInstanceState: Bundle)</TD></TR>
<TR><TD ALIGN="LEFT" >- returnToBookings()</TD></TR>
<TR><TD ALIGN="LEFT" >- showAlertDialog(menuItem: MenuItemModel)</TD></TR>
<TR><TD ALIGN="LEFT" >- showDeleteConfirmation(table: Table)</TD></TR>
<TR><TD ALIGN="LEFT" >- showTableScreen(table: Table)</TD></TR>
<TR><TD ALIGN="LEFT" >- updateNote()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MenuItemModel410850388[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MenuItemModel</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   itemDescription: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   itemName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   itemPrice: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): MenuItemModel</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Table156698436[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Table</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   bookingDate: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   bookingId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   bookingTime: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   note: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   partySize: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   restaurantId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   restaurantName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   section: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tableId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tableNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tableSeats: long [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ describeContents(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeToParcel(dest: Parcel, flags: int)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
BookingMenuAdapterRV1980441948 -> MenuItemModel410850388[label="orderList
[0..*]"];
BookingOverview1980441948 -> BookingMenuAdapterRV1980441948[label="adapter
[0..1]"];
BookingOverview1980441948 -> MenuItemModel410850388[label="order
[0..*]"];
BookingOverview1980441948 -> Table156698436[label="table
[0..1]"];
    
}
@enduml